local wezterm = require 'wezterm'

local format_title = function(title, is_active, max_width)
    local background = { Background = { Color = '#1f1f28' } }
    local title_len = #title
    local pad_len = math.floor((max_width - title_len) / 2)

    local formatted_title = {
        Text = string.rep(' ', pad_len) .. title .. string.rep(' ', pad_len)
    }
    if is_active then
        return { background = { Color = '#666666'}, { Foreground = { Color = '#957fb8' } }, formatted_title }
    else
        return { background, { Foreground = { Color = '#cad3f5' } }, formatted_title }
    end
end

local basename = function(s)
    return string.gsub(s, "(.*[/\\])(.*)", "%2")
end

wezterm.on('format-tab-title', function(tab, tabs, panes, config, hover, max_width)
    local pane = tab.active_pane
    local title = tab.tab_index + 1 .. ":" .. basename(pane.foreground_process_name)
    return format_title(title, tab.is_active, max_width)
end)

wezterm.on('update-right-status', function(window)
    local date = wezterm.strftime '%Y-%m-%d %H:%M:%S'
    window:set_right_status({ Foreground = { Color = '#cad3f5' } },
        wezterm.format { { Text = ' ' .. date .. ' ' } })
end)

--wezterm.on('format-window-title', function(tab, pane, tabs, panes, config)
--  local zoomed = ''
--  if tab.active_pane.is_zoomed then
--    zoomed = '[Z] '
--  end

--  local index = ''
--  if #tabs > 1 then
--    index = string.format('[%d/%d] ', tab.tab_index + 1, #tabs)
--  end

--  return zoomed .. index .. tab.active_pane.title
--end)

local user_var_tab_title_key = 'tab_title'
wezterm.on('user-var-changed', function(window, pane, name, value)
    wezterm.log_info('user-var-changed', name, value)
    if name == user_var_tab_title_key then pane:tab():set_title(value) end
end)

return {
    -- color_schemas
    color_scheme = "OLEDppuccin",

    -- 自定义配色
    colors = {
        -- tab配置
        tab_bar = {
            -- The color of the inactive tab bar edge/divider
            background = '#1f1f28',
            new_tab = { bg_color = '#1f1f28', fg_color = '#dcd7ba' },
            inactive_tab_edge = '#575757'
        },
        foreground = '#dcd7ba',
        background = '#1f1f28',

        cursor_bg = '#c8c093',
        cursor_fg = '#c8c093',
        cursor_border = '#c8c093',

        selection_fg = '#c8c093',
        selection_bg = '#2d4f67',

        scrollbar_thumb = '#16161d',
        split = '#16161d',

        ansi = {
            '#090618',
            '#c34043',
            '#76946a',
            '#c0a36e',
            '#7e9cd8',
            '#957fb8',
            '#6a9589',
            '#c8c093'
        },
        brights = {
            '#727169',
            '#e82424',
            '#98bb6c',
            '#e6c384',
            '#7fb4ca',
            '#938aa9',
            '#7aa89f',
            '#dcd7ba'
        },
        indexed = { [16] = '#ffa066', [17] = '#ff5d62' }
    },
    font = wezterm.font_with_fallback {
        { family = 'JetBrainsMono Nerd Font Mono', weight = 'DemiBold', scale= 1.0 }, 
        { family = 'JetBrains Mono', weight = 'Bold'}
    },
    font_size = 14,
    line_height = 1.2,
    tab_max_width = 24,
    window_decorations = 'INTEGRATED_BUTTONS | RESIZE',
    window_background_opacity = 1.0,
    tab_bar_at_bottom = false,
    use_fancy_tab_bar = true,
    show_tab_index_in_tab_bar = true,
    show_new_tab_button_in_tab_bar = false;
    tab_and_split_indices_are_zero_based = false,
    window_frame = {
        font = wezterm.font { family = 'JetBrainsMono Nerd Font Mono', weight = 'Regular' },
        inactive_titlebar_bg = '#353535',
        active_titlebar_bg = '#2b2042',
        inactive_titlebar_fg = '#cccccc',
        active_titlebar_fg = '#ffffff',
        inactive_titlebar_border_bottom = '#2b2042',
        active_titlebar_border_bottom = '#2b2042',
    },
    enable_scroll_bar = true,
    min_scroll_bar_height = "0.5cell"
}
